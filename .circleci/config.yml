version: 2.1

# executors are environments where we run things
executors:
  standard_cpu:
    docker:
      - image: circleci/python:3.6.5
  gpu:
    environment:
      CUDA_VERSION: "10.0"
    machine:
      image: default
    resource_class: gpu.medium  # tesla m60


# commands are nice shorthand
commands:
  setup:
    description: "Minimal CircleCI setup"
    steps:
      - run:
          name: Fixes git
          command: |
            ( [[ "$CIRCLE_BRANCH" != "master" ]] && git branch -f master origin/master ) || true
      - run:
          name: Sets up the virtual environment
          command: |
            mkdir -p ~/venv
            virtualenv --python=python3.6 ~/venv
            echo ". ~/venv/bin/activate" >> $BASH_ENV
            . ~/venv/bin/activate
            pip3 install --upgrade --progress-bar off pip
            pip3 install --progress-bar off flake8 gitpython


  installdeps:
    description: "Installs all dependencies"
    steps:
      - run:
          name: pip3 installs dependencies
          command: |
            pip3 install --progress-bar off -r requirements.txt
            pip3 install --progress-bar off https://download.pytorch.org/whl/cpu/torch-1.0.1.post2-cp36-cp36m-linux_x86_64.whl

  setupcuda:
    description: "Sets up the CUDA environment"
    steps:
      - run:
          name: Setup CUDA
          command: |
            wget 'https://s3.amazonaws.com/ossci-linux/nvidia_driver/NVIDIA-Linux-x86_64-410.79.run'
            sudo /bin/bash ./NVIDIA-Linux-x86_64-396.26.run -s --no-drm
            curl -s -L https://nvidia.github.io/nvidia-docker/gpgkey | \
            sudo apt-key add -
            distribution=$(. /etc/os-release;echo $ID$VERSION_ID)
            curl -s -L https://nvidia.github.io/nvidia-docker/$distribution/nvidia-docker.list | \
            sudo tee /etc/apt/sources.list.d/nvidia-docker.list
            sudo apt-get update
            # Get the exact docker version required by nvidia-docker
            # (and not the newer version)
            sudo apt-get install -y docker-ce=18.06.2~ce~3-0~ubuntu
            sudo apt-get install -y nvidia-docker2
            nvidia-smi
            sudo pkill -SIGHUP dockerd
            docker pull pytorch/1.0.1-cuda10.0-cudnn7-runtime
            # docker run --runtime=nvidia 
            # docker pull cherrypidocker/repo:9.2-cudnn7-devel-gcc7-clang8-ubuntu16.04 >/dev/null
            # docker run --runtime=nvidia  --name cuda_bash  -v /home/circleci/repo:/repo --rm -t -d -w /repo  cherrypidocker/repo:9.2-cudnn7-devel-gcc7-clang8-ubuntu16.04 /bin/bash


jobs:
  unittest:
    executor: standard_cpu
    working_directory: ~/ParlAI
    steps:
      - checkout
      - setup
      - installdeps
      - run:
          name: Unit tests
          command: python setup.py test -s tests.suites.oncommit -q

  lint:
    executor: standard_cpu
    working_directory: ~/ParlAI
    steps:
      - checkout
      - setup
      - run:
          name: Lint
          command: bash ./tests/lint_changed.sh

  nightly_gpu_test:
    executor: gpu
    working_directory: ~/ParlAI
    steps:
      - checkout
      - setupcuda
      - setup
      - installdeps
      - run:
          name: Nightly GPU tests
          command: python setup.py test -s tests.suites.nightly_gpu -q

  nightly_cpu_test:
    executor: standard_cpu
    working_directory: ~/ParlAI
    steps:
      - checkout
      - setup
      - installdeps
      - run:
          name: All nightly CPU tests
          command: python setup.py test -s tests.suites.nightly_cpu -q


workflows:
  version: 2
  commit:
    jobs:
      - lint
      - unittest
      - nightly_gpu_test
  nightly:
    triggers:
      - schedule:
          cron: "0 10 * * *"  # 10am UTC is 5am NYC
          filters:
            branches:
              only:
                - master
    jobs:
      - unittest
      - nightly_cpu_test
      - nightly_gpu_test
